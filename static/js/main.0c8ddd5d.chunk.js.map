{"version":3,"sources":["Components/Header.js","Context/AppReducer.js","Context/GlobalState.js","Components/Balance.js","Components/IncomeExpenses.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","something","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","item","toFixed","IncomeExpenses","amounts","income","acc","expense","className","Math","abs","Transaction","sign","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c8ddd5d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n            \r\n        </h2>\r\n    )\r\n}\r\n","function something(state, action) {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n        return{\r\n            ...state,\r\n            transactions: state.transactions.filter(transaction => transaction.id !== \r\n                action.payload)\r\n\r\n        }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n        return state \r\n    }\r\n}\r\nexport default something\r\n\r\n\r\n\r\n\r\n","import React, {createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial State\r\n\r\nconst initialState = {\r\n    transactions: [\r\n        { id: 1, text: 'Flower', amount: -20 },\r\n        { id: 2, text: 'Salary', amount: 300 },\r\n        { id: 3, text: 'Book', amount: -10 },\r\n        { id: 4, text: 'Camera', amount: 150 }\r\n    ]\r\n}\r\n\r\n//Creat Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ( {children}) =>{\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n//Actions\r\nfunction deleteTransaction(id){\r\n    dispatch({\r\n        type : 'DELETE_TRANSACTION',\r\n        payload: id\r\n    })\r\n}\r\n\r\nfunction addTransaction(transaction){\r\n    dispatch({\r\n        type : 'ADD_TRANSACTION',\r\n        payload: transaction\r\n    })\r\n}\r\n\r\n\r\n    return (<GlobalContext.Provider value = {{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n\r\n}","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../Context/GlobalState';\r\n\r\n\r\n\r\nexport const Balance = () => {\r\n    \r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction =>transaction.amount)\r\n    const total = amounts.reduce((total, item) => (total +=item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1> {'$'} {total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../Context/GlobalState';\r\n\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts.filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item ), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = amounts.filter(item => item < 0)\r\n    .reduce((acc, item) => (acc += item ), 0)\r\n    .toFixed(2);\r\n\r\n    return (\r\n        \r\n            <div className=\"inc-exp-container\">\r\n        <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">+${Math.abs(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">-${Math.abs(expense)}</p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n"," import React, {useContext} from 'react'\r\n import {GlobalContext} from '../Context/GlobalState';\r\n\r\n \r\n export const Transaction = ({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n\r\n     const sign = transaction.amount <0 ? '-': '+';\r\n     return (\r\n        <li className={sign === \"-\" ? \"minus\" : \"plus\"}>\r\n            {transaction.text} <span>{sign} ${Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n     )\r\n }\r\n ","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../Context/GlobalState';\r\nimport {Transaction} from './Transaction';\r\n\r\n\r\nexport const TransactionList = () => {\r\n  const {transactions} = useContext(GlobalContext)\r\n\r\n    return (\r\n        <>\r\n              <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map(transaction =>(\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n          \r\n        ))} \r\n      </ul>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './Components/Header';\nimport {Balance} from './Components/Balance';\nimport {IncomeExpenses} from './Components/IncomeExpenses';\nimport {TransactionList} from './Components/TransactionList';\nimport {AddTransaction} from './Components/AddTransaction';\n\nimport {GlobalProvider} from './Context/GlobalState';\n\n\n\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n\n\n      </div>\n    </GlobalProvider>\n      \n\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}